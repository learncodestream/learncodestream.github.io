<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learn Code Stream</title><link>https://learncodestream.github.io/</link><description>Recent content on Learn Code Stream</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://learncodestream.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Stages</title><link>https://learncodestream.github.io/pipelines/stages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/stages/</guid><description>Pipeline Stages are logical groupings of Tasks to reflect the structure of the process, for example your process has a Build, Test and Release phase, the Pipeline Stages can be configured to reflect this.
Pipeline Stages Properties can be accessed from each stage and task using ${Stage.Task.Property} - for example, in the &amp;ldquo;Build&amp;rdquo; Stage the &amp;ldquo;Trigger Image Enumeration&amp;rdquo; task is a REST API call with a JSON response. The response property &amp;ldquo;id&amp;rdquo; is referenced using ${Build.</description></item><item><title>Projects</title><link>https://learncodestream.github.io/configure/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/projects/</guid><description>A Project in vRealize Automation is used to scope user access to resources within the platform. For Code Stream this means grouping Administrator, Member or Viewer access to Pipelines , Executions , User Operations , Endpoints , Variables , and Triggers . A user can be a member of many different projects, and hold different roles in each project.
Projects Project Member Permissions Administrator - Manage Pipelines, Manage Restricted Pipelines, Execute Pipelines, Execute Restricted Pipelines, Manage Executions, Read objects Member - Manage Pipelines, Execute Pipelines, Read objects Viewer - Read objects Restricted Endpoints/Variables Endpoints and Variables can be marked as restricted, which means that only users with Administrator rights (either Code Stream Administrator, or Project Administrator) can manage them.</description></item><item><title>Variables</title><link>https://learncodestream.github.io/configure/variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/variables/</guid><description>Variables are a great way to keep reusable text values or secrets for use in Pipelines in one central place. Variables are scoped to a Project and can be used to provide secure access to credentials or configuration information. Using Variables ensures that if you need to export your pipelines that sensitive information is not exported, and allows you to control access to that sensitive information.
Variables Type (see ) REGULAR - Value is plain text and accessible to any Project role SECRET - Value is hidden but can be used in Pipelines by Project members and administrators RESTRICTED - Value is hidden and can only be accessed in Pipelines by administrators Project - Variables need to be attached to a project.</description></item><item><title>Gerrit</title><link>https://learncodestream.github.io/triggers/gerrit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/triggers/gerrit/</guid><description>Gerrit Trigger</description></item><item><title>Git</title><link>https://learncodestream.github.io/triggers/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/triggers/git/</guid><description>Activity The activity tab shows a log of the Git events that have been recieved by Code Stream. You can see details of the Git commit details, repository and messages, as well the Pipeline that has been executed in response and it&amp;rsquo;s status. you can also click directly through to the execution of the Pipeline.
Git Trigger Activity Webhook Configuration When creating a new Webhook for Git, the following options are available:</description></item><item><title>Docker</title><link>https://learncodestream.github.io/triggers/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/triggers/docker/</guid><description>Docker Triggers</description></item><item><title>Adding a Kubernetes Endpoint</title><link>https://learncodestream.github.io/learn-in-5/adding-a-kubernetes-endpoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/learn-in-5/adding-a-kubernetes-endpoint/</guid><description>In order to use a Kuberenetes Task , or to use a kubernetes cluster as your pipeline workspace , you need to configure a kubernetes endpoint .
Prerequisites Any Kubernetes compliant cluster Network connectivity to the Kubernetes cluster - either direct or via a Cloud Proxy (for vrealize automation cloud) An authentication token, certificate, or basic authentication username and password The type of authentication you use will be dependant on the Kubernetes cluster you are using, and what type of access you want to allow Code Stream to have.</description></item><item><title>Bamboo</title><link>https://learncodestream.github.io/configure/endpoints/bamboo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/bamboo/</guid><description>The Bamboo endpoint provides configuration for use in the Bamboo Task .
Project - endpoints are assigned to a Project to provide scope of access Type - Bamboo Name - a name to identify the Bamboo Endpoint Description - description of the Bamboo Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - URL of the Bamboo server Username - Username to authenticate to the Bamboo server Password - Password to authenticate to the Bamboo server Adding a Bamboo Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Bamboo</title><link>https://learncodestream.github.io/pipelines/tasks/bamboo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/bamboo/</guid><description>The Bamboo task enables you to integrate to an Atlassisan Bamboo endpoint .
You can select the Endpoint , the Bamboo project and the Bamboo plan and run it directly in your pipeline.
Bamboo</description></item><item><title>CI</title><link>https://learncodestream.github.io/pipelines/tasks/ci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/ci/</guid><description>The CI task enables almost any action in your pipeline by pulling a specific Docker image from a registry endpoint, and deploying it to a Docker host configured as an Endpoint. It then executes the CI task script in the context of the running container. It is an incredibly powerful and flexible task type, because the image can have almost any tool or program in it.
The CI task runs using parameters configured in the Pipeline Workspace configuration , including the Container Image, Docker Registry, Docker Host, directory, cache, environment variables and CPU/Memory limits.</description></item><item><title>Condition</title><link>https://learncodestream.github.io/pipelines/tasks/condition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/condition/</guid><description>The Condition Task is very similar to the Precondition setting available for all Tasks, without having an additional task attached to it. It can be used to evaluate the success of previous Stages before moving on with the Pipeline, or to trigger the failure of a pipeline based on a set of conditions. Simple operators can be used to compare Pipeline task output, Variables, Inputs, or any other property that is accessible in the Pipeline.</description></item><item><title>Custom</title><link>https://learncodestream.github.io/pipelines/tasks/custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/custom/</guid><description>The Custom Task allows you to use Custom Integrations in Pipeline Stages - for more details please see the Custom Integrations page.
Using a Custom Integration in a Custom Task</description></item><item><title>Docker</title><link>https://learncodestream.github.io/configure/endpoints/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/docker/</guid><description>The Docker Endpoint provides an execution environment for CI Tasks and Custom Integrations which are executed inside a container image on the configured Docker host.
Project - endpoints are assigned to a Project to provide scope of access Type - Docker Name - a name to identify the Docker Endpoint Description - description of the Docker Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - the address including protocol (http/https) and port for the Docker API Shared Path - a folder on the Docker host where the logs and artefacts generated in executions will be stored Adding a Docker Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Docker Registry</title><link>https://learncodestream.github.io/configure/endpoints/docker-registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/docker-registry/</guid><description>The Docker Registry endpoint provides credentials for accessing a specific Registry in the context of a Pipeline Workspace . If a container image requires authentication to download, credentials can be added and the Endpoint assigned to the Pipeline Workspace configuration. When the Pipeline is executed the Endpoint credentials will be used in the docker pull.
Project - endpoints are assigned to a Project to provide scope of access Type - Docker Registry Name - a name to identify the Docker Registry Endpoint Description - description of the Docker Registry Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate Server type - DockerHub or Docker Trusted Registry Repo URL - the URL of the container image repository Authentication Docker Hub uses Username and Password authentication Docker Trusted Registry can use a Username and Password or Access token Adding a Docker Registry Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Email</title><link>https://learncodestream.github.io/configure/endpoints/email/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/email/</guid><description>The Email endpoint provides configuration for sending Pipeline Notifications , Task Notifications , and User Operation notifications.
Project - endpoints are assigned to a Project to provide scope of access Type - Email Name - a name to identify the Email Endpoint Description - description of the Email Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate Sender&amp;rsquo;s addresss - the address to send the email from Encryption method - TLS, SSL or NONE Outbound host - FQDN or IP address of the SMTP host Outbound port - Port of the SMTP host Outbound protocol - protocol for sending, SMTP or POP3 Outbound username - Username to authenticate with the outbound host Outbound password - Password to authenticate with the outbound host Adding an Email Endpoint configuration You can validate the configuration using the VALIDATE button.</description></item><item><title>Gerrit</title><link>https://learncodestream.github.io/configure/endpoints/gerrit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/gerrit/</guid><description>The Gerrit endpoint provides configuration for use in the Gerrit Trigger .
Project - endpoints are assigned to a Project to provide scope of access Type - Gerrit Name - a name to identify the Gerrit Endpoint Description - description of the Gerrit Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - URL of the Gerrit server Username - Username to authenticate to the Gerrit server Password - Password to authenticate to the Gerrit server Private key - Private key (rsa) to authenticate to the Gerrit server Pass phrase - Pass phrase to decrypt the Private key Adding a Gerrit Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Git</title><link>https://learncodestream.github.io/configure/endpoints/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/git/</guid><description>The Git endpoint provides configuration for use in Pipelines , CI Tasks , Kubernetes Tasks , VMware Cloud Template Tasks , and Git Triggers . A Git Endpoint provides access to a specific branch of a specific repository.
Project - endpoints are assigned to a Project to provide scope of access Type - Git Name - a name to identify the Git Endpoint Description - description of the Git Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate Git server type - GitHub, GitLab, Bitbucket, GitHub Enterprise, GitLab Enterprise, or Bitbucket Enterprise Repo URL - URL of the repository to add ( see this blog post for more detail ) Branch - Git branch to use Authentication Type - Private Token or Password Username - Username to authenticate to the Git repository Password - Password to authenticate to the Git repository Private token - API token to authenticate to the Git repository Adding a Git Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Jenkins</title><link>https://learncodestream.github.io/configure/endpoints/jenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/jenkins/</guid><description>The Jenkins endpoint provides integration to a Jenkins server and allows the use of a Jenkins Task to execute a Job on the Jenkins server configured in the endpoint.
Project - endpoints are assigned to a Project to provide scope of access Type - Jenkins Name - a name to identify the Jenkins Endpoint Description - description of the Jenkins Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - URL of the Jenkins server Username - Username to authenticate to the Jenkins server Password - Password to authenticate to the Jenkins server Folder Path - Location of the Job folder Polling interval (sec) - Interval to poll the Jenkins server for Job responses Request retries - Number of times to request Job retries Retry wait time (sec) - Interval to wait before requesting a Job retry Adding a Jenkins Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Jenkins</title><link>https://learncodestream.github.io/pipelines/tasks/jenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/jenkins/</guid><description>Jenkins task</description></item><item><title>Jira</title><link>https://learncodestream.github.io/configure/endpoints/jira/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/jira/</guid><description>The Jira endpoint provides configuration for sending Pipeline Notifications and Task Notifications .
Project - endpoints are assigned to a Project to provide scope of access Type - Jira Name - a name to identify the Jira Endpoint Description - description of the Jira Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - the URL of the Jira instance Username - the username to authenticate to the Jira instance Password - the password to authenticate to the Jira instance Adding an Jira Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Kubernetes</title><link>https://learncodestream.github.io/configure/endpoints/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/kubernetes/</guid><description>The Kubernetes endpoint provides configuration for a Kubernetes cluster to use with the Kubernetes Task or as the Pipeline execution context .
Project - endpoints are assigned to a Project to provide scope of access Type - Kubernetes Name - a name to identify the Kubernetes Endpoint Description - description of the Kubernetes Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate Kubernetes cluster URL - the URL of the Kubernetes instance Authentication type Token - Kubernetes user token Basic Auth Username - the username to authenticate to the Kubernetes instance Password - the password to authenticate to the Kubernetes instance Certificate Certificate authority data - certificate-authority-data from a kubeconf file Certificate data - client-cerificate-data from a kubeconf file Client key data - client-key-data from a kubeconf file Adding an Kubernetes Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>Kubernetes</title><link>https://learncodestream.github.io/pipelines/tasks/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/kubernetes/</guid><description>The Kubernetes Task allows for interation and execution of Get, Create, Apply, Delete and Rollback actions against a Kubernetes Endpoint . you can use a git endpoint for the yaml manifest definitions. the combination of git endpoints , use of a git triggers and the Kubernetes task allows you to build complex Kubernetes application deployment strategies.
Common across all the Kubernetes actions is are:
Kubernetes Cluster - the Kubernetes endpoint that the task will execute against Timeout - the task timeout while waiting for a response from Kubernetes, this can be useful if, for example, your deployment task needs to download several large container images that may exceed the default timeout, or your deployment has readiness checks that take time to return OK.</description></item><item><title>Pipeline</title><link>https://learncodestream.github.io/pipelines/tasks/pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/pipeline/</guid><description>The Pipeline task allows you to nest existing Pipelines within a parent pipeline, which is really useful for chaining together smaller units of work within a larger parent process. The Pipeline task will automatically generate fields for the Inputs of the nested Pipeline, and the Output parameters will be available to the parent Pipeline as the output properties of the Pipeline task.
The Task configured below will execute a Pipeline called &amp;ldquo;vra-POST&amp;rdquo;, the three Input parameters (vraaccesstoken, vrarequestpayload, vrarequesturi) for the Pipeline have been automatically added to the task and the one output paramter vraResponseJSON has been added to the output parameters.</description></item><item><title>Poll</title><link>https://learncodestream.github.io/pipelines/tasks/poll/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/poll/</guid><description>The Poll task is most commonly used in combination with the REST task to Poll for a job completion status, however, it can be used to Poll any HTTP server and wait for a success or failure criteria to be evaluated - or a timeout to expire.
Poll Request URL - this is the URL that the Poll task should poll Count - how many times should the Poll task attempt to access the URL Interval (in seconds) - how long should the Poll task pause between attempts to access Ignore Intermediate Failure - ignore intermediate failures, useful if you&amp;rsquo;re waiting for a service to become available before you can poll it Headers - which headers should be sent with the request (e.</description></item><item><title>PowerShell</title><link>https://learncodestream.github.io/pipelines/tasks/powershell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/powershell/</guid><description>The PowerShell task allows you to execute PowerShell scripts on a remote PowerShell server using PSRemoting.
Host - FQDN or IP address of the PowerShell host Username - username to access the PowerShell host Password - password to access the PowerShell host Use TLS - enable to connect over TLS Trust self signed certificates - enable to trust self-signed certificates over TLS Script - the PowerShell script to execute Arguments - arguments to the PowerShell script Working Directory - directory in which to execute the script Configure the PowerShell task Output Parameters status userFolder response responseFilePath errorMessage logFilePath exitCode scriptExecutionId completed error logs</description></item><item><title>Publishing Preserved Artifacts</title><link>https://learncodestream.github.io/learn-in-5/publishing-preserved-artifacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/learn-in-5/publishing-preserved-artifacts/</guid><description>With the CI task in a Code Stream Pipeline, it&amp;rsquo;s possible to Preserve Artifacts - any file that you want to persist beyond the lifetime of a Pipeline Execution can be added to the Preserve Artifacts field. These preserved artifacts are stored on the Shared Path on the Docker Host , which you can access later using the file path specified in the CI task outputs. One of the issues with this is that the Shared Path is also where the pipeline execution logs are kept, which may contain sensitive information if you&amp;rsquo;re not using Secret Variables , and to deliver a preserved file to an end user you may need to grant SSH access to your host - not ideal.</description></item><item><title>REST</title><link>https://learncodestream.github.io/pipelines/tasks/rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/rest/</guid><description>The REST task is a powerful and adaptable task that lets us interact with any standard REST API - this means we can integrate almost any 3rd party system that has a REST API.
Headers are common accross all the REST action types and allow you to set the HTTP headers to be sent with the API request - often, but not always, these include Content-Type, Accept and Authorization headers - you&amp;rsquo;ll need to a consult your API documentation to see which headers are required.</description></item><item><title>Slack Notifications</title><link>https://learncodestream.github.io/learn-in-5/slack-notifications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/learn-in-5/slack-notifications/</guid><description>Using the webhook function for Pipeline Notifications or Task Notifications and the Slack Incoming Webhooks app it&amp;rsquo;s possible to get a rich set of notifications on pipeline events.
Once your Incoming Webhooks app is configured you will get a URL to post your messages to, and the notification is a simple configuration:
Configure a Slack Notification The Slack payload can be configured as simply, or as complex, as you like:</description></item><item><title>SSH</title><link>https://learncodestream.github.io/pipelines/tasks/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/ssh/</guid><description>The SSH task is similar in many ways to the CI and powershell tasks - it allows you to execute code on a remote machine, in this case over SSH. The task can authenticate with username and password, or a private key.
Host - the IP or FQDN of the SSH host Username - the username to authenticate to the SSH host Passsword - the password to authenticate to the SSH host -or- Private Key and Passphrase - the private key and passphrase for the private key to authenticate to the SSH host Environment variables - can be used to make pipeline variables available to the SSH host script execution, if needed Script - the shell script to execute on the SSH host Arguments - arguments for the shell execution Working Directory - the directory in which to execute the script (defaults to the users home directory, if not specified) An example SSH task configuration To use an SSH key to connect to the SSH host, the key must be a PEM encoded RSA key (it should start with ---begin rsa private key----).</description></item><item><title>TFS</title><link>https://learncodestream.github.io/configure/endpoints/tfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/tfs/</guid><description>The TFS endpoint provides integration to a TFS server and allows the use of a TFS Task .
Project - endpoints are assigned to a Project to provide scope of access Type - TFS Name - a name to identify the TFS Endpoint Description - description of the TFS Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - URL of the TFS server Username - Username to authenticate to the TFS server Password - Password to authenticate to the TFS server Domain name - Domain name to authenticate to the TFS server Polling interval (sec) - Interval to poll the TFS server TFS Server Version - 2015 or 2017 Adding a TFS Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>User Operation</title><link>https://learncodestream.github.io/pipelines/tasks/user-operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/user-operation/</guid><description>User Operations provide a way to include approvals within a Pipeline Execution. The User Operations dashboard provides a view of all Active and Inactive user operations.
Approvers - email addresses of users who can approve or reject the task. You can use the ${requestBy} variable to access the requesting user&amp;rsquo;s ID Approver Groups - (Currently vRA Cloud) email addresses of groups who can approve or reject the task Summary - summary of the approval, used for the subject of the email sent if configured Description - description of the approval task, the body of the email sent if configured Exires after - the time after which the approval task will expire and the pipeline execution will be cancelled Send Email - if enabled, the Email server option can be configured to send the email Cancel pending tasks - if enabled, this will cancel any outstanding previous approvals for this pipeline Email server - the Email Endpoint used to send email notifications User Operations Output Parameters status responderRoles respondedByEmail comments respondedBy index respondedOnInMicros</description></item><item><title>VMware Cloud Template</title><link>https://learncodestream.github.io/pipelines/tasks/cloud-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/cloud-template/</guid><description>The VMWare Cloud Template task can be used to Create, Update, Delete, and Rollback Deployments in vRealize Automation Cloud Assembly.
API token - the only common setting across all actions in this task is the API token. This is an API token with permissions to vRealize Automation Cloud Assembly API to perfom the Action on a Deployment. You can enter the token directly in the field, however you should use a Secret or Restricted variable to avoid the token being visible in pipeline logs.</description></item><item><title>vRealize Orchestrator</title><link>https://learncodestream.github.io/configure/endpoints/vrealize-orchestrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/configure/endpoints/vrealize-orchestrator/</guid><description>The vRealize Orchestrator endpoint provides integration to a vRealize Orchestrator server and allows the use of a vRealize Orchestrator Task .
Project - endpoints are assigned to a Project to provide scope of access Type - vRealize Orchestrator Name - a name to identify the vRealize Orchestrator Endpoint Description - description of the vRealize Orchestrator Endpoint Mark restricted - if enabled, only Code Stream or Project Administrators can execute Pipelines using this endpoint Cloud proxy - (vRA Cloud only) the Cloud Proxy appliance through which the endpoint should communicate URL - URL of the vRealize Orchestrator server Username - Username to authenticate to the vRealize Orchestrator server Password - Password to authenticate to the vRealize Orchestrator server To access the local vRealize Orchestrator instance on the vRealize Automation appliance, just enter the appliance URL Adding a vRealize Orchestrator Endpoint configuration When adding an endpoint URL you&amp;rsquo;ll be prompted to view and accept the certificate.</description></item><item><title>vRealize Orchestrator</title><link>https://learncodestream.github.io/pipelines/tasks/vrealize-orchestrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/pipelines/tasks/vrealize-orchestrator/</guid><description/></item></channel></rss>