<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learn Code Stream</title><link>https://learncodestream.github.io/</link><description>Recent content on Learn Code Stream</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://learncodestream.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Stages</title><link>https://learncodestream.github.io/Pipelines/Stages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Stages/</guid><description>Pipeline Stages are logical groupings of Tasks to reflect the structure of the process, for example your process has a Build, Test and Release phase, the Pipeline Stages can be configured to reflect this.
Pipeline Stages Properties can be accessed from each stage and task using ${Stage.Task.Property} - for example, in the &amp;ldquo;Build&amp;rdquo; Stage the &amp;ldquo;Trigger Image Enumeration&amp;rdquo; task is a REST API call with a JSON response. The response property &amp;ldquo;id&amp;rdquo; is referenced using ${Build.</description></item><item><title>GitOps in Code Stream</title><link>https://learncodestream.github.io/Getting-Started/GitOps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Getting-Started/GitOps/</guid><description>!</description></item><item><title>Projects</title><link>https://learncodestream.github.io/Configure/Projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Projects/</guid><description>A Project is where you combine resources, with users, to put all your Pipelines, variables etc. in Codestream, to share between the members of the project.</description></item><item><title>Variables</title><link>https://learncodestream.github.io/Configure/variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/variables/</guid><description>Variables are a great way to keep text, secrets etc. that you have to reuse, in your Pipelines, in one central place, to easily manage. It&amp;rsquo;s also a good practice, if you need to export your pipelines, to make sure, that sensetive information is not exported as well.
Create Create variables Type Regular - Value is not hidden Secret - Value is hidden Restricted - Pipelines containing Restricted variables, can only be run by administrators Project Variables need to be attached to a project.</description></item><item><title>Bamboo</title><link>https://learncodestream.github.io/Configure/Endpoints/bamboo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/bamboo/</guid><description> Bamboo The Atlassian Bamboo endpoint is easy to configure.
Just type in
Your Project The name of the Bamboo endpoint Cloud proxy (If using VRA Cloud) Url Username Password</description></item><item><title>Bamboo</title><link>https://learncodestream.github.io/Pipelines/Tasks/bamboo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/bamboo/</guid><description>Bamboo enables you to integrate to a Atlassisan Bamboo server
As a precondition, you have to have setup your Bamboo endpoint,
You can select teh Endpoint, the Project and the Plan of your Banboo server, and run it directly in your pipeline.
Bamboo</description></item><item><title>CI</title><link>https://learncodestream.github.io/Pipelines/Tasks/CI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/CI/</guid><description>The CI task enables almost any action in your pipeline by pulling a specific Docker image from a registry endpoint, and deploying it to a Docker host configured as an Endpoint. It then executes the CI task script in the context of the running container. It is an incredibly powerful and flexible task type, because the image can have almost any tool or program in it.
The CI task runs using parameters configured in the Pipeline Workspace configuration, including the Container Image, Docker Registry, Docker Host, directory, cache, environment variables and CPU/Memory limits.</description></item><item><title>Condition</title><link>https://learncodestream.github.io/Pipelines/Tasks/Condition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Condition/</guid><description>The Condition Task is very similar to the Precondition setting available for all Tasks, without having an additional task attached to it. It can be used to evaluate the success of previous Stages before moving on with the Pipeline, or to trigger the failure of a pipeline based on a set of conditions. Simple operators can be used to compare Pipeline task output, Variables, Inputs, or any other property that is accessible in the Pipeline.</description></item><item><title>Custom</title><link>https://learncodestream.github.io/Pipelines/Tasks/Custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Custom/</guid><description>The Custom Task allows you to use Custom Integrations in Pipeline Stages - for more details please see the Custom Integrations page.
Using a Custom Integration in a Custom Task</description></item><item><title>Docker</title><link>https://learncodestream.github.io/Configure/Endpoints/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/docker/</guid><description>ggg</description></item><item><title>Docker Registry</title><link>https://learncodestream.github.io/Configure/Endpoints/dockeregistry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/dockeregistry/</guid><description>ggg</description></item><item><title>Email</title><link>https://learncodestream.github.io/Configure/Endpoints/email/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/email/</guid><description>ggg</description></item><item><title>Gerrit</title><link>https://learncodestream.github.io/Configure/Endpoints/gerrit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/gerrit/</guid><description>ggg</description></item><item><title>Git</title><link>https://learncodestream.github.io/Configure/Endpoints/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/git/</guid><description>ggg</description></item><item><title>Hello World</title><link>https://learncodestream.github.io/Getting-Started/Hello-World/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Getting-Started/Hello-World/</guid><description>My first pipeline</description></item><item><title>Jenkins</title><link>https://learncodestream.github.io/Configure/Endpoints/jenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/jenkins/</guid><description>ggg</description></item><item><title>Jira</title><link>https://learncodestream.github.io/Configure/Endpoints/jira/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/jira/</guid><description>ggg</description></item><item><title>Kubernetes</title><link>https://learncodestream.github.io/Configure/Endpoints/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/kubernetes/</guid><description>ggg</description></item><item><title>Kubernetes</title><link>https://learncodestream.github.io/Pipelines/Tasks/Kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Kubernetes/</guid><description>The Kubernetes Task allows for interation and execution of Get, Create, Apply, Delete and Rollback actions against a Kubernetes Endpoint. You can use a Git Endpoint for the YAML manifest definitions. The combination of Git Endpoints, use of a Git Triggers and the Kubernetes task allows you to build complex Kubernetes application deployment strategies.
Common across all the Kubernetes actions is are:
Kubernetes Cluster - the Kubernetes endpoint that the task will execute against Timeout - the task timeout while waiting for a response from Kubernetes, this can be useful if, for example, your deployment task needs to download several large container images that may exceed the default timeout, or your deployment has readiness checks that take time to return OK.</description></item><item><title>Pipeline</title><link>https://learncodestream.github.io/Pipelines/Tasks/Pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Pipeline/</guid><description>The Pipeline task allows you to nest existing Pipelines within a parent pipeline, which is really useful for chaining together smaller units of work within a larger parent process. The Pipeline task will automatically generate fields for the Inputs of the nested Pipeline, and the Output parameters will be available to the parent Pipeline as the output properties of the Pipeline task.
The Task configured below will execute a Pipeline called &amp;ldquo;vra-POST&amp;rdquo;, the three Input parameters (vraAccessToken, vraRequestPayload, vraRequestUri) for the Pipeline have been automatically added to the task and the one output paramter vraResponseJSON has been added to the output parameters.</description></item><item><title>Poll</title><link>https://learncodestream.github.io/Pipelines/Tasks/Poll/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Poll/</guid><description>The Poll task is most commonly used in combination with the REST task to Poll for a job completion status, however, it can be used to Poll any HTTP server and wait for a success or failure criteria to be evaluated - or a timeout to expire.
Poll Request URL - this is the URL that the Poll task should poll Count - how many times should the Poll task attempt to access the URL Interval (in seconds) - how long should the Poll task pause between attempts to access Ignore Intermediate Failure - ignore intermediate failures, useful if you&amp;rsquo;re waiting for a service to become available before you can poll it Headers - which headers should be sent with the request (e.</description></item><item><title>PowerShell</title><link>https://learncodestream.github.io/Pipelines/Tasks/PowerShell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/PowerShell/</guid><description>The PowerShell task allows you to execute PowerShell scripts on a remote PowerShell server using PSRemoting.
Host Username Password Use TLS Script Arguments Working Directory</description></item><item><title>Publishing Pipelines</title><link>https://learncodestream.github.io/Getting-Started/Publishing-Pipelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Getting-Started/Publishing-Pipelines/</guid><description>Code Stream Pipelines can be published to Service Broker with a Custom Form, allowing you to create a much more interactive user experiece.</description></item><item><title>REST</title><link>https://learncodestream.github.io/Pipelines/Tasks/REST/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/REST/</guid><description>The REST task is a powerful and adaptable task that lets us interact with any standard REST API - this means we can integrate almost any 3rd party system that has a REST API.
Headers are common accross all the REST action types and allow you to set headers to be sent with the API request - typically these include a Content-Type, Accept and Authorization headers - however, you&amp;rsquo;ll need to a consult your API documentation to see which headers are required.</description></item><item><title>SSH</title><link>https://learncodestream.github.io/Pipelines/Tasks/SSH/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/SSH/</guid><description/></item><item><title>TFS</title><link>https://learncodestream.github.io/Configure/Endpoints/tfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/tfs/</guid><description>ggg</description></item><item><title>TFS</title><link>https://learncodestream.github.io/Pipelines/Tasks/TFS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/TFS/</guid><description/></item><item><title>User Operation</title><link>https://learncodestream.github.io/Pipelines/Tasks/User-Operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/User-Operation/</guid><description>User Operation is a way to pause a running pipeline, to ask a user for approval.
Approvers kan be both a list of users or groups.
A custom description can be created, and send by email.
A timeout for approvals can also be set. When the time expires, the approval will be denied. User Operations</description></item><item><title>VMware Cloud Template</title><link>https://learncodestream.github.io/Pipelines/Tasks/Cloud-Template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Cloud-Template/</guid><description>Hmmm</description></item><item><title>vRealize Orchestrator</title><link>https://learncodestream.github.io/Pipelines/Tasks/vRealize-Orchestrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/vRealize-Orchestrator/</guid><description/></item><item><title>vRealize Orchestrator (vRO)</title><link>https://learncodestream.github.io/Configure/Endpoints/vro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Configure/Endpoints/vro/</guid><description>ggg</description></item></channel></rss>