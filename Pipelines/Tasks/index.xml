<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tasks on Learn Code Stream</title><link>https://learncodestream.github.io/Pipelines/Tasks/</link><description>Recent content in Tasks on Learn Code Stream</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://learncodestream.github.io/Pipelines/Tasks/index.xml" rel="self" type="application/rss+xml"/><item><title>Bamboo</title><link>https://learncodestream.github.io/Pipelines/Tasks/bamboo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/bamboo/</guid><description>Bamboo enables you to integrate to a Atlassisan Bamboo server
As a precondition, you have to have setup your Bamboo endpoint,
You can select teh Endpoint, the Project and the Plan of your Banboo server, and run it directly in your pipeline.
Bamboo</description></item><item><title>CI</title><link>https://learncodestream.github.io/Pipelines/Tasks/CI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/CI/</guid><description>The CI task enables almost any action in your pipeline by pulling a specific Docker image from a registry endpoint, and deploying it to a Docker host configured as an Endpoint. It then executes the CI task script in the context of the running container. It is an incredibly powerful and flexible task type, because the image can have almost any tool or program in it.
The CI task runs using parameters configured in the Pipeline Workspace configuration, including the Container Image, Docker Registry, Docker Host, directory, cache, environment variables and CPU/Memory limits.</description></item><item><title>Condition</title><link>https://learncodestream.github.io/Pipelines/Tasks/condition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/condition/</guid><description>Conditions are a way, to make sure that a task, only runs, if a certain condition is met.
Precondition An example could be, that you have an input value, in your pipeline, with the name of &amp;ldquo;run&amp;rdquo;
In your task, you put in the Precondition of
${input.run} == &amp;quot;true&amp;quot; which means that this task, will only run, if the value if run = true</description></item><item><title>Custom</title><link>https://learncodestream.github.io/Pipelines/Tasks/Custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Custom/</guid><description>The Custom Task allows you to use Custom Integrations in Pipeline Stages.
Using a Custom Integration in a Custom Task</description></item><item><title>Kubernetes</title><link>https://learncodestream.github.io/Pipelines/Tasks/Kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/Kubernetes/</guid><description>The Kubernetes Task allows for interation and execution of Get, Create, Apply, Delete and Rollback actions against a Kubernetes Endpoint. You can use a Git Endpoint for the YAML manifest definitions. The combination of Git Endpoints, use of a Git Triggers and the Kubernetes task allows you to build complex Kubernetes application deployment strategies.
Common across all the Kubernetes actions is are:
Kubernetes Cluster - the Kubernetes endpoint that the task will execute against Timeout - the task timeout while waiting for a response from Kubernetes Source Type Local definition uses the YAML entered in the Local YAML Definition field - this allows you to use variables, properties and inputs directly in the YAML definition to customise the YAML Source Control uses the YAML loaded from a Git repository specified as a Git Endpoint, which can be customised by using variables in the YAML source file and parameters in the task configuration.</description></item><item><title>Pipeline</title><link>https://learncodestream.github.io/Pipelines/Tasks/pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/pipeline/</guid><description>Nesting pipelines&amp;hellip;</description></item><item><title>Poll</title><link>https://learncodestream.github.io/Pipelines/Tasks/poll/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/poll/</guid><description>Poll</description></item><item><title>PowerShell</title><link>https://learncodestream.github.io/Pipelines/Tasks/powershell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/powershell/</guid><description/></item><item><title>REST</title><link>https://learncodestream.github.io/Pipelines/Tasks/rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/rest/</guid><description/></item><item><title>SSH</title><link>https://learncodestream.github.io/Pipelines/Tasks/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/ssh/</guid><description/></item><item><title>TFS</title><link>https://learncodestream.github.io/Pipelines/Tasks/tfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/tfs/</guid><description/></item><item><title>User Operation</title><link>https://learncodestream.github.io/Pipelines/Tasks/useroperation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/useroperation/</guid><description>User Operation is a way to pause a running pipeline, to ask a user for approval.
Approvers kan be both a list of users or groups.
A custom description can be created, and send by email.
A timeout for approvals can also be set. When the time expires, the approval will be denied. User Operations</description></item><item><title>VMware Cloud Template</title><link>https://learncodestream.github.io/Pipelines/Tasks/cloudtemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/cloudtemplate/</guid><description>Hmmm</description></item><item><title>vRealize Orchestrator</title><link>https://learncodestream.github.io/Pipelines/Tasks/vro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learncodestream.github.io/Pipelines/Tasks/vro/</guid><description/></item></channel></rss>